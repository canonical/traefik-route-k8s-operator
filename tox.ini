# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/charms/traefik_route_k8s
all_path = {[vars]src_path} {[vars]lib_path} {[vars]tst_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8==4.0.1
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    # uncomment the following line if this charm owns a lib
    codespell {[vars]lib_path}
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv* \
      --skip .mypy_cache --skip icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{charm,lib,unit,integration}]
description = Run static analysis checks
deps = 
  mypy
  types-dataclasses
  types-PyYAML
  types-requests
  charm: -r{toxinidir}/requirements.txt
  lib: ops
  unit: {[testenv:unit]deps}
  integration: {[testenv:integration]deps}
  integration: pytest-operator==1.0.0b1
commands =
  charm: mypy {[vars]src_path} {posargs}
  lib: mypy --python-version 3.5 {[vars]lib_path} {posargs}
  unit: mypy {[vars]tst_path}/unit {posargs}
  integration: mypy {[vars]tst_path}/integration {posargs} \
    --exclude {[vars]tst_path}/integration/ingress-requirer-mock

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    asyncstdlib
    pytest
    juju==3.0.4
    pytest-operator==1.0.0b1
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}
